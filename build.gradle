group 'com.r3cev.prototyping'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'project-report'

allprojects {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

buildscript {
    ext.kotlin_version = '1.0.2'
    ext.quasar_version = '0.7.5'
    ext.asm_version = '0.5.3'
    ext.artemis_version = '1.2.0'
    ext.jetty_version = '9.1.1.v20140108'
    ext.jersey_version = '2.22.2'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}


repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'http://oss.sonatype.org/content/repositories/snapshots'
    }
    jcenter()
}

//noinspection GroovyAssignabilityCheck
configurations {
    quasar

    // we don't want isolated.jar in classPath, since we want to test jar being dynamically loaded as an attachment
    runtime.exclude module: 'isolated'
}

// To find potential version conflicts, run "gradle htmlDependencyReport" and then look in
// build/reports/project/dependencies/index.html for green highlighted parts of the tree.

dependencies {
    compile project(':contracts')

    compile "com.google.code.findbugs:jsr305:3.0.1"
    compile "org.slf4j:slf4j-jdk14:1.7.13"

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-support-jdk8:0.1"

    compile "com.google.guava:guava:19.0"

    // JOpt: for command line flags.
    compile "net.sf.jopt-simple:jopt-simple:4.9"

    // Quasar: for the bytecode rewriting for state machines.
    quasar "co.paralleluniverse:quasar-core:${quasar_version}:jdk8@jar"

    // Artemis: for reliable p2p message queues.
    compile "org.apache.activemq:artemis-server:${artemis_version}"
    compile "org.apache.activemq:artemis-core-client:${artemis_version}"

    // JAnsi: for drawing things to the terminal in nicely coloured ways.
    compile "org.fusesource.jansi:jansi:1.11"

    // GraphStream: For visualisation
    compile "org.graphstream:gs-core:1.3"
    compile "org.graphstream:gs-ui:1.3"
    compile("com.intellij:forms_rt:7.0.3") {
        exclude group: "asm"
    }

    // Force commons logging to version 1.2 to override Artemis, which pulls in 1.1.3 (ARTEMIS-424)
    compile "commons-logging:commons-logging:1.2"

    // Web stuff: for HTTP[S] servlets
    compile "org.eclipse.jetty:jetty-servlet:${jetty_version}"
    compile "org.eclipse.jetty:jetty-webapp:${jetty_version}"
    compile "javax.servlet:javax.servlet-api:3.1.0"
    compile "org.jolokia:jolokia-agent-war:2.0.0-M1"
    compile "commons-fileupload:commons-fileupload:1.3.1"

    // Jersey for JAX-RS implementation for use in Jetty
    compile "org.glassfish.jersey.core:jersey-server:${jersey_version}"
    compile "org.glassfish.jersey.containers:jersey-container-servlet-core:${jersey_version}"
    compile "org.glassfish.jersey.containers:jersey-container-jetty-http:${jersey_version}"
    // NOTE there is a Jackson version clash between jersey-media-json-jackson (v2.5.4) and jackson-module-kotlin (v.2.5.5)
    // Have not found an Issue in the issue tracker for Jersey for this issue
    compile ("org.glassfish.jersey.media:jersey-media-json-jackson:${jersey_version}") {
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-annotations'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
    }
    compile ("com.fasterxml.jackson.module:jackson-module-kotlin:2.5.5-2") {
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-annotations'
    }
    compile "com.fasterxml.jackson.core:jackson-annotations:2.5.5"

    // Coda Hale's Metrics: for monitoring of key statistics
    compile "io.dropwizard.metrics:metrics-core:3.1.2"

    // JimFS: in memory java.nio filesystem. Used for test and simulation utilities.
    compile "com.google.jimfs:jimfs:1.1"

    // TypeSafe Config: for simple and human friendly config files.
    compile "com.typesafe:config:1.3.0"

    // Unit testing helpers.
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.4.1'
}

// These lines tell Gradle to add a couple of JVM command line arguments to unit test and program runs, which set up
// the Quasar bytecode rewriting system so fibers can be suspended. The verifyInstrumentation line makes things run
// slower but you get a much better error message if you forget to annotate a method with @Suspendable that needs it.
//
// In Java 9 (hopefully) the requirement to annotate methods as @Suspendable will go away.

applicationDefaultJvmArgs = ["-javaagent:${configurations.quasar.singleFile}"]
mainClassName = 'demos.TraderDemoKt'

tasks.withType(Test) {
    jvmArgs "-javaagent:${configurations.quasar.singleFile}"
    jvmArgs "-Dco.paralleluniverse.fibers.verifyInstrumentation"
}
tasks.withType(JavaExec) {
    jvmArgs "-javaagent:${configurations.quasar.singleFile}"
    jvmArgs "-Dco.paralleluniverse.fibers.verifyInstrumentation"
}

// Package up the other demo programs.
task getRateFixDemo(type: CreateStartScripts) {
    mainClassName = "demos.RateFixDemoKt"
    applicationName = "get-rate-fix"
    defaultJvmOpts = ["-javaagent:${configurations.quasar.singleFile}"]
    outputDir = new File(project.buildDir, 'scripts')
    classpath = jar.outputs.files + project.configurations.runtime
}

task getIRSDemo(type: CreateStartScripts) {
    mainClassName = "demos.IRSDemoKt"
    applicationName = "irsdemo"
    defaultJvmOpts = ["-javaagent:${configurations.quasar.singleFile}"]
    outputDir = new File(project.buildDir, 'scripts')
    classpath = jar.outputs.files + project.configurations.runtime
}

// These lines tell gradle to run the Quasar suspendables scanner to look for unannotated super methods
// that have @Suspendable sub implementations.  These tend to cause NPEs and are not caught by the verifier
// NOTE: need to make sure the output isn't on the classpath or every other run it generates empty results, so
// we explicitly delete to avoid that happening.  We also need to turn off what seems to be a spurious warning in the IDE
//
// TODO: Make this task incremental, as it can be quite slow.

//noinspection GroovyAssignabilityCheck
task quasarScan(dependsOn: ['classes', 'core:classes', 'contracts:classes']) << {
    ant.taskdef(name:'scanSuspendables', classname:'co.paralleluniverse.fibers.instrument.SuspendablesScanner',
            classpath: "${sourceSets.main.output.classesDir}:${sourceSets.main.output.resourcesDir}:${configurations.runtime.asPath}")
    delete "$sourceSets.main.output.resourcesDir/META-INF/suspendables", "$sourceSets.main.output.resourcesDir/META-INF/suspendable-supers"
    ant.scanSuspendables(
            auto:false,
            suspendablesFile: "$sourceSets.main.output.resourcesDir/META-INF/suspendables",
            supersFile: "$sourceSets.main.output.resourcesDir/META-INF/suspendable-supers") {
        fileset(dir: sourceSets.main.output.classesDir)
    }
}

jar.dependsOn quasarScan

applicationDistribution.into("bin") {
    from(getRateFixDemo)
    from(getIRSDemo)
    fileMode = 0755
}